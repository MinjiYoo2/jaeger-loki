apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
---
apiVersion: v1
data:
  sampling: '{"default_strategy":{"param":1,"type":"probabilistic"}}'
kind: ConfigMap
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: sampling-configuration
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-sampling-configuration
    app.kubernetes.io/part-of: jaeger
  name: jaeger-sampling-configuration
  namespace: monitoring
---
apiVersion: v1
data:
  ui: '{"dependencies":{"menuEnabled":false}}'
kind: ConfigMap
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: ui-configuration
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-ui-configuration
    app.kubernetes.io/part-of: jaeger
  name: jaeger-ui-configuration
  namespace: monitoring
---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: jaeger-configuration
#   namespace: monitoring
#   labels:
#     app: jaeger
#     app.kubernetes.io/name: jaeger
# data:
#   span-storage-type: grpc-plugin
#   collector: |
#     grpc-storage-plugin:
#       binary: "/plugin/jaeger-objectstorage"
#       configuration-file: "/etc/loki/loki.yaml"
#       log-level: debug
#     sampling:
#       strategies-file: "/etc/jaeger/sampling/sampling.json"
#     collector:
#       zipkin:
#         host-port: 9411
#   query: |
#     grpc-storage-plugin:
#       binary: "/plugin/jaeger-objectstorage"
#       configuration-file: "/etc/loki/loki.yaml"
#       log-level: debug
#     query:
#       ui-config: "/etc/config/ui.json"  
#   agent: |
#     reporter:
#       grpc:
#         host-port: "jaeger-collector.monitoring.svc:14250"
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/port: "14269"
    prometheus.io/scrape: "true"
  generation: 1
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-collector
    app.kubernetes.io/part-of: jaeger
  name: jaeger-collector
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: collector
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: jaeger-collector
      app.kubernetes.io/part-of: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: jaeger
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/managed-by: jaeger-operator
        app.kubernetes.io/name: jaeger-collector
        app.kubernetes.io/part-of: jaeger
    spec:
      containers:
      - args:
        - --grpc-storage-plugin.binary=/plugin/jaeger-objectstorage
        - --grpc-storage-plugin.configuration-file=/etc/loki/loki.yaml
        - --grpc-storage-plugin.log-level=debug
        - --sampling.strategies-file=/etc/jaeger/sampling/sampling.json
        - --collector.zipkin.host-port=9411
        env:
        - name: SPAN_STORAGE_TYPE
          value: grpc-plugin
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        image: jaegertracing/jaeger-collector:1.27.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14269
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: jaeger-collector
        ports:
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 14267
          name: c-tchan-trft
          protocol: TCP
        - containerPort: 14268
          name: c-binary-trft
          protocol: TCP
        - containerPort: 14269
          name: admin-http
          protocol: TCP
        - containerPort: 14250
          name: grpc
          protocol: TCP
        - containerPort: 4317
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 14269
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/loki
          name: config
        - mountPath: /etc/jaeger/sampling
          name: jaeger-sampling-configuration-volume
          readOnly: true
        - mountPath: /plugin
          name: plugin-volume
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      initContainers:
      - image: docker.io/tmaxcloudck/jaeger-loki-plugin:v2.0.1
        imagePullPolicy: IfNotPresent
        name: install-plugin
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/loki
          name: config
        - mountPath: /etc/jaeger/sampling
          name: jaeger-sampling-configuration-volume
          readOnly: true
        - mountPath: /plugin
          name: plugin-volume
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: jaeger
      serviceAccountName: jaeger
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: loki-config
        name: config
      - configMap:
          defaultMode: 420
          items:
          - key: sampling
            path: sampling.json
          name: jaeger-sampling-configuration
        name: jaeger-sampling-configuration-volume
      - emptyDir: {}
        name: plugin-volume
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: jaeger-collector
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-collector
    app.kubernetes.io/part-of: jaeger
spec:
  ports:
    - name: jaeger-collector-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  selector:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-collector
    app.kubernetes.io/part-of: jaeger
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/port: "16687"
    prometheus.io/scrape: "true"
  generation: 3
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-query
    app.kubernetes.io/part-of: jaeger
  name: jaeger-query
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: query
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: jaeger-query
      app.kubernetes.io/part-of: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "16687"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        app.kubernetes.io/component: query
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/managed-by: jaeger-operator
        app.kubernetes.io/name: jaeger-query
        app.kubernetes.io/part-of: jaeger
    spec:
      containers:
      - args:
        - --grpc-storage-plugin.binary=/plugin/jaeger-objectstorage
        - --grpc-storage-plugin.configuration-file=/etc/loki/loki.yaml
        - --grpc-storage-plugin.log-level=debug
        - --query.ui-config=/etc/config/ui.json
        env:
        - name: SPAN_STORAGE_TYPE
          value: grpc-plugin
        - name: METRICS_STORAGE_TYPE
        - name: JAEGER_DISABLED
          value: "false"
        - name: JAEGER_SERVICE_NAME
          value: jaeger.monitoring
        - name: JAEGER_PROPAGATION
          value: jaeger,b3,w3c
        - name: JAEGER_AGENT_PORT
          value: "6831"
        image: jaegertracing/jaeger-query:1.27.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 16687
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: jaeger-query
        ports:
        - containerPort: 16686
          name: query
          protocol: TCP
        - containerPort: 16687
          name: admin-http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 16687
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/loki
          name: config
        - mountPath: /etc/config
          name: jaeger-ui-configuration-volume
          readOnly: true
        - mountPath: /plugin
          name: plugin-volume
      initContainers:
      - image: docker.io/tmaxcloudck/jaeger-loki-plugin:v2.0.1
        imagePullPolicy: IfNotPresent
        name: install-plugin
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/loki
          name: config
        - mountPath: /etc/config
          name: jaeger-ui-configuration-volume
          readOnly: true
        - mountPath: /plugin
          name: plugin-volume
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: jaeger
      serviceAccountName: jaeger
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: loki-config
        name: config
      - configMap:
          defaultMode: 420
          items:
          - key: ui
            path: ui.json
          name: jaeger-ui-configuration
        name: jaeger-ui-configuration-volume
      - emptyDir: {}
        name: plugin-volume
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: monitoring
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-query
    app.kubernetes.io/part-of: jaeger
spec:
  ports:
  - name: http-query
    port: 16686
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  - name: jaeger-admin
    port: 16687
    protocol: TCP
    targetPort: 16687
  selector:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-query
    app.kubernetes.io/part-of: jaeger
  type: LoadBalancer
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: monitoring
  name: jaeger-agent
  labels:
    app: jaeger
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-agent
    app.kubernetes.io/part-of: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/managed-by: jaeger-operator
        app.kubernetes.io/name: jaeger-agent
        app.kubernetes.io/part-of: jaeger
      annotations:
        prometheus.io/port: "16687"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: jaeger
      containers:
        - image: docker.io/jaegertracing/jaeger-agent:1.27.0
          name: jaeger-agent
          args:
          #- --config-file=/conf/agent.yaml
          - --reporter.grpc.host-port=dns:///jaeger-collector.monitoring.svc:14250
          - --log-level=info
          ports:
            - containerPort: 5775
              name: zk-compact-trft
              protocol: UDP
            - containerPort: 5778
              name: config-rest
              protocol: TCP
            - containerPort: 6831
              name: jg-compact-trft
              protocol: UDP
            - containerPort: 6832
              name: jg-binary-trft
              protocol: UDP
            - containerPort: 14271
              name: admin-http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 14271
              scheme: HTTP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: monitoring
  labels:
    app: jaeger
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-agent
    app.kubernetes.io/part-of: jaeger
spec:
  ports:
  - name: jaeger-agent
    port: 6831
    protocol: UDP
    targetPort: 6831
  selector:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-agent
    app.kubernetes.io/part-of: jaeger
      # volumes:
      #   - configMap:
      #       name: jaeger-configuration
      #       items:
      #         - key: agent
      #           path: agent.yaml
      #     name: jaeger-configuration-volume